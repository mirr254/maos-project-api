name: Generate code coverage badge

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    name: Update coverage badge
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          persist-credentials: false 
          fetch-depth: 0
      - name: Setup go
        uses: actions/setup-go@v4
        with:
          go-version-file: 'go.mod'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker Layers
        uses: actions/cache@v3
        with:
            path: /tmp/.buildx-cache
            key: ${{runner.os}}-buildx-${{github.sha}}
            restore-keys: |
                ${{ runner.os}}-buildx

      - name: Docker Compose Up
        run: |
            docker-compose up -d

      - name: Install Pulumi
        run: curl -fsSL https://get.pulumi.com | sh      

      - name: Run Test
        run: |
          go test -v ./... -covermode=count -coverprofile=coverage.out
          go tool cover -func=coverage.out -o=coverage.out

      - name: Generate Coverage Badge
        run: |
          coverage=$(go tool cover -func=coverage.out | grep total: | awk '{print $3}')
          percent=$(echo $coverage | sed 's/%//')
          curl -o coverage-badge.svg "https://img.shields.io/badge/Coverage-${percent}%25-brightgreen"

      - name: Update README with Coverage Badge
        run: |
          sed -i '/!\[Coverage\](.*)/d' README.md
          sed -i "1i ![Coverage](coverage-badge.svg)\n" README.md

      - name: Commit changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "chore: Updated coverage badge."

      - name: Push changes
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GIT_TOKEN }}
          branch: ${{ github.head_ref }}